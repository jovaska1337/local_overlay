--- a/CMakeLists.txt
--- b/CMakeLists.txt
@@ -6,6 +6,8 @@
 set(KSYSGUARD_VERSION 4.98.0)
 set(KSYSGUARD_STRING_VERSION "${KSYSGUARD_VERSION}")
 
+set(KSYSGUARD_SOVERSION 1)
+
 set(QT_MIN_VERSION "6.6.0")
 set(KF6_MIN_VERSION "6.0.0")
 set(KDE_COMPILERSETTINGS_LEVEL "5.82")
--- a/processcore/CMakeLists.txt
--- b/processcore/CMakeLists.txt
@@ -54,32 +54,32 @@
         "$<BUILD_INTERFACE:${libksysguard_SOURCE_DIR}>"
         "$<INSTALL_INTERFACE:${KDE_INSTALL_INCLUDEDIR}/ksysguard>"
 )
-#set_target_properties(processcore_ksg6 PROPERTIES
-#    VERSION ${KSYSGUARD_VERSION}
-#    SOVERSION ${KSYSGUARD_SOVERSION}
-#    EXPORT_NAME ProcessCore
-#)
-#install(TARGETS ProcessCore EXPORT libksysguardLibraryTargets ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
+set_target_properties(processcore_ksg6 PROPERTIES
+    VERSION ${KSYSGUARD_VERSION}
+    SOVERSION ${KSYSGUARD_SOVERSION}
+    EXPORT_NAME ProcessCore
+)
+install(TARGETS processcore_ksg6 EXPORT libksysguardLibraryTargets ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
 
 #add_subdirectory(declarative)
 add_subdirectory(plugins)
 
 ########### install files ###############
 
-#install( FILES
-    #processes.h
-    #process.h
-    #process_controller.h
-    #process_attribute.h
-    #process_data_provider.h
-    #process_data_model.h
-    #process_attribute_model.h
-    #formatter.h
-    #unit.h
-    #${CMAKE_CURRENT_BINARY_DIR}/processcore_export.h
-    #DESTINATION ${KDE_INSTALL_INCLUDEDIR}/ksysguard/processcore
-    #COMPONENT Devel
-#)
+install( FILES
+    processes.h
+    process.h
+    process_controller.h
+    process_attribute.h
+    process_data_provider.h
+    process_data_model.h
+    process_attribute_model.h
+    formatter.h
+    unit.h
+    ${CMAKE_CURRENT_BINARY_DIR}/processcore_ksg6_export.h
+    DESTINATION ${KDE_INSTALL_INCLUDEDIR}/ksysguard6/processcore
+    COMPONENT Devel
+)
 
 #------ KAuth stuff
 
@@ -93,12 +93,12 @@
         read_procsmaps_runnable.cpp read_procsmaps_runnable.h
     )
 
-    add_executable(ksysguardprocesslist_helper ${ksysguardprocesslist_helper_srcs})
-    target_link_libraries(ksysguardprocesslist_helper Qt::Core KF6::AuthCore KF6::I18n)
-    #install(TARGETS ksysguardprocesslist_helper DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
+    add_executable(ksysguardprocesslist_helper_ksg6 ${ksysguardprocesslist_helper_srcs})
+    target_link_libraries(ksysguardprocesslist_helper_ksg6 Qt::Core KF6::AuthCore KF6::I18n)
+    install(TARGETS ksysguardprocesslist_helper_ksg6 DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
 
-    #kauth_install_helper_files(ksysguardprocesslist_helper org.kde.ksysguard.processlisthelper root)
-    #kauth_install_actions(org.kde.ksysguard.processlisthelper actions.actions)
+    kauth_install_helper_files(ksysguardprocesslist_helper_ksg6 org.kde.ksysguard.processlisthelper_ksg6 root)
+    kauth_install_actions(org.kde.ksysguard.processlisthelper_ksg6 actions.actions)
 
-    set_target_properties(ksysguardprocesslist_helper PROPERTIES COMPILE_FLAGS "-Wall -ggdb")
+    set_target_properties(ksysguardprocesslist_helper_ksg6 PROPERTIES COMPILE_FLAGS "-Wall -ggdb")
 endif()
--- a/processcore/application_data_model.h
--- b/processcore/application_data_model.h
@@ -8,11 +8,11 @@
 
 #include "cgroup_data_model.h"
 
-#include "processcore_export.h"
+#include "processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
-class PROCESSCORE_EXPORT ApplicationDataModel : public CGroupDataModel
+class PROCESSCORE_KSG6_EXPORT ApplicationDataModel : public CGroupDataModel
 {
     Q_OBJECT
 public:
--- a/processcore/cgroup.h
--- b/processcore/cgroup.h
@@ -12,7 +12,7 @@
 
 #include <KService>
 
-#include "processcore_export.h"
+#include "processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
@@ -23,7 +23,7 @@
  * @brief The CGroup class represents a cgroup. This could be a
  * service, slice or scope
  */
-class PROCESSCORE_EXPORT CGroup
+class PROCESSCORE_KSG6_EXPORT CGroup
 {
 public:
     virtual ~CGroup();
--- a/processcore/cgroup_data_model.h
--- b/processcore/cgroup_data_model.h
@@ -10,7 +10,7 @@
 
 #include "process_attribute_model.h"
 
-#include "processcore_export.h"
+#include "processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
@@ -24,7 +24,7 @@
  *
  * Data is refreshed on a timer
  */
-class PROCESSCORE_EXPORT CGroupDataModel : public QAbstractItemModel
+class PROCESSCORE_KSG6_EXPORT CGroupDataModel : public QAbstractItemModel
 {
     Q_OBJECT
     /**
--- a/processcore/extended_process_list.h
--- b/processcore/extended_process_list.h
@@ -10,13 +10,13 @@
 #include <QObject>
 #include <QSharedPointer>
 
-#include "processcore/processcore_export.h"
+#include "processcore/processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
 class ProcessAttribute;
 
-class PROCESSCORE_EXPORT ExtendedProcesses : public KSysGuard::Processes
+class PROCESSCORE_KSG6_EXPORT ExtendedProcesses : public KSysGuard::Processes
 {
     Q_OBJECT
 public:
--- a/processcore/process.h
--- b/processcore/process.h
@@ -14,13 +14,13 @@
 #include <QTime>
 #include <QVariant>
 
-#include "processcore/processcore_export.h"
+#include "processcore/processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
 class ProcessPrivate; // forward decl d-ptr
 
-class PROCESSCORE_EXPORT Process
+class PROCESSCORE_KSG6_EXPORT Process
 {
 public:
     enum ProcessStatus { Running, Sleeping, DiskSleep, Zombie, Stopped, Paging, Ended, OtherStatus = 99 };
--- a/processcore/process_attribute.h
--- b/processcore/process_attribute.h
@@ -11,14 +11,14 @@
 #include "processes.h"
 #include "unit.h"
 
-#include "processcore/processcore_export.h"
+#include "processcore/processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
 class Process;
 class CGroup;
 
-class PROCESSCORE_EXPORT ProcessAttribute : public QObject
+class PROCESSCORE_KSG6_EXPORT ProcessAttribute : public QObject
 {
     Q_OBJECT
 public:
--- a/processcore/process_attribute_model.h
--- b/processcore/process_attribute_model.h
@@ -9,7 +9,7 @@
 
 #include <QAbstractListModel>
 
-#include "processcore_export.h"
+#include "processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
@@ -20,7 +20,7 @@
  * Presents a list of available attributes that can be
  * enabled on a ProceessDataModel
  */
-class PROCESSCORE_EXPORT ProcessAttributeModel : public QAbstractListModel
+class PROCESSCORE_KSG6_EXPORT ProcessAttributeModel : public QAbstractListModel
 {
     Q_OBJECT
 public:
--- a/processcore/process_controller.h
--- b/processcore/process_controller.h
@@ -16,7 +16,7 @@
 
 #include "process.h"
 
-#include "processcore/processcore_export.h"
+#include "processcore/processcore_ksg6_export.h"
 
 class QWindow;
 
@@ -30,7 +30,7 @@
  */
 namespace KSysGuard
 {
-class PROCESSCORE_EXPORT ProcessController : public QObject
+class PROCESSCORE_KSG6_EXPORT ProcessController : public QObject
 {
     Q_OBJECT
 
--- a/processcore/process_data_model.h
--- b/processcore/process_data_model.h
@@ -9,7 +9,7 @@
 #include <QAbstractItemModel>
 #include <processes.h>
 
-#include "processcore_export.h"
+#include "processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
@@ -26,7 +26,7 @@
  * needing to understand the semantics of each column
  * It is designed to be consumable by a QML API
  */
-class PROCESSCORE_EXPORT ProcessDataModel : public QAbstractItemModel
+class PROCESSCORE_KSG6_EXPORT ProcessDataModel : public QAbstractItemModel
 {
     Q_OBJECT
 
--- a/processcore/process_data_provider.h
--- b/processcore/process_data_provider.h
@@ -9,7 +9,7 @@
 #include <QObject>
 #include <QVariant>
 
-#include "processcore/processcore_export.h"
+#include "processcore/processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
@@ -21,7 +21,7 @@
  * Base class for a process plugin data
  * Plugins provide a list of additional attributes, which in turn have data about a given process
  */
-class PROCESSCORE_EXPORT ProcessDataProvider : public QObject
+class PROCESSCORE_KSG6_EXPORT ProcessDataProvider : public QObject
 {
     Q_OBJECT
 
--- a/processcore/processes.h
--- b/processcore/processes.h
@@ -12,7 +12,7 @@
 #include <QObject>
 #include <QVariant>
 
-#include "processcore/processcore_export.h"
+#include "processcore/processcore_ksg6_export.h"
 
 namespace KSysGuard
 {
@@ -39,7 +39,7 @@
 #ifdef Q_WS_WIN
 class Processes : public QObject
 #else
-class PROCESSCORE_EXPORT Processes : public QObject
+class PROCESSCORE_KSG6_EXPORT Processes : public QObject
 #endif
 {
     Q_OBJECT
